export default function lazyLoad(r,i){return new Promise((t,e)=>{var o=document.createElement("script");o.type="text/javascript";const n=i||function(){};o.onload=function(){n(),t()},o.onerror=e,o.src=r,document.getElementsByTagName("head")[0].appendChild(o)})}async function loadCdn(t,e,o){"object"!=typeof t&&(void 0===t?await lazyLoad(e,o):new Error("load cdn fail: "+e))}const isString=t=>"string"==typeof t||t instanceof String,isNumber=t=>"number"==typeof t&&isFinite(t),isBoolean=t=>"boolean"==typeof t,isObject=t=>t&&"object"==typeof t&&t.constructor===Object,isArray=t=>t&&"object"==typeof t&&t.constructor===Array,isFunction=t=>"function"==typeof t,toNumber=t=>isNaN(Number(t))?NaN:Number(t),toBoolean=t=>"true"===t||"false"!==t&&void 0,toQueryString=e=>Object.keys(e).map(t=>encodeURIComponent(t)+"="+encodeURIComponent(e[t])).join("&"),isJSON=t=>{if(isString(t))try{return JSON.parse(t),!0}catch{}else if(isObject(t))try{return JSON.stringify(t),!0}catch{}return!1},isEmpty=t=>null==t||"string"==typeof t&&""===t.trim()||!(!Array.isArray(t)||0!==t.length)||"object"==typeof t&&0===Object.keys(t).length,isNotEmpty=t=>!isEmpty(t);export{loadCdn,isString,isNumber,isBoolean,isObject,isArray,isFunction,toNumber,toBoolean,toQueryString,isJSON,isEmpty,isNotEmpty};